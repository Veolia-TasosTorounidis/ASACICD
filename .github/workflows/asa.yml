name: 'Create Terraform resources'

on:
  push:
    branches:
    - main

jobs:
  SAbuild:
    name: 'Build and test Stream analytics job'
    runs-on: ubuntu-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Use Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '15.x'

# Install azure-streamanalytics-cicd
        - name: Install dependencies
          run: sudo npm install -g azure-streamanalytics-cicd --unsafe-perm=true --allow-root

# Build
        - name: Build ASA Job
          run: sudo azure-streamanalytics-cicd build -project ASACICD/ASACICD.asaproj -OutputPath ./ASACICD/SAJobTemplate.json

        - name: Print LS
          run: cd ./ASACICD; ls

        - name: Uploading build SA job
          uses: actions/upload-artifact@v2
          with:
           name: SAJobTemplate.json
           path: ./ASACICD/SAJobTemplate.json
           if-no-files-found: error




  terraform:
    name: 'Terraform'
    needs: SAbuild
    runs-on: ubuntu-latest
    env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

# Use the Bash shell by default
    defaults:
      run:
        shell: bash
        working-directory: ./terraform


    steps:
# Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Retrieve SA template
      uses: actions/download-artifact@v2
      with:
        name: SAJobTemplate.json
        path: ./build

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./build
# Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

# Check that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt 

# Initializes the Terraform working directory
    - name: Terraform Init
      run: terraform init

    - name: Print LS
      run: ls

    - name: Print CD ./build LS
      run: cd /build; ls

    - name: Print CD.. ./ASACICD LS
      run: cd ..; cd ./ASACICD; ls

# Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

# On push to main, build or change infrastructure according to the Terraform configuration files and the Terraform plan
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#      run: terraform apply -auto-approve